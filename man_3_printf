PRINTF(3)                Custom Library Functions                PRINTF(3)

	NAME
	_printf - custom printf function that generates formatted output

	SYNOPSIS
#include "main.h"

	int _printf(const char *format, ...);

	DESCRIPTION
	The _printf routine produces output according to a format string.
	It writes the output to standard output and returns the count of characters displayed, excluding the null terminator used to
	end string outputs.

	The format string is composed of zero or more directives. Standard
	characters within the format string are rendered as is. Format specifiers,
	denoted by the '%' character, define the type of arguments
	expected and the corresponding output.

	Supported Conversion Specifiers
	%c      Displays a single character. The corresponding argument must be
	an integer representing the character.

	%s      Displays a null-terminated string. If the argument is NULL, the
	output will be "(null)".

	%%      Displays a literal '%' symbol.

	%d, %i
	Displays a signed integer in base 10.

	Return Value
	The _printf routine returns the total characters printed.
	In case of an error, such as when a NULL format string is provided,
	the function returns -1.

	Illustrations
	Illustration 1:
	To display a simple string:
	_printf("Hello, World!\n");

	Illustration 2:
	To display an integer and a character:
	_printf("Number: %d, Letter: %c\n", 42, 'A');

	Illustration 3:
	To handle a NULL string:
	_printf("This is a %s\n", NULL);
Output:
This is a (null)

	Limitations
	The _printf routine does not handle:
	- Field width or precision
	- Flags such as '-' or '+'
	- Length modifiers like 'l' or 'h'

	Authors
	Developed by Dan Florentin & Pierre Lionnel.
